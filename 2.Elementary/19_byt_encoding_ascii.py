import sys

# По суті всі таблиці кодування важливі коли ми передаємо символи по мережі або записуємо в файл
# для всіх інших випадків - вона не важлива!!!
# Byte - це незмінний тип даних, Натомість bytearray - змінний!!!!!

# Визначаємо кодування системи по замовчуванню
print(f'Твоя таблиця кодування {sys.getdefaultencoding()}')

if sys.getdefaultencoding() == 'utf8':
    print('Так, це UTF-8')
else:
    print(f'Ні. Твоя таблиця кодування відрізняється від UTF-8 і є {sys.getdefaultencoding}()')

# Для визначення відповідності символу в таблиці кодування використовуємо ORD()
a = ord('a')
print(f'Літера "а" в таблиці кодування UTF-8 має значення {a}')
# для зворотнього перетворення із таблиці в символ використовуємо CHR()
ch = chr(236)
print(f'За значенням символу 236 в UTF-8 прихований символ {ch}')

# для декодування використовується ф-ція encode(). b на початку рядка вказує на те, що повертається байт
print('Декодування в різних системах')
st = 'Ihor'
enc_ascii = st.encode('ascii')
enc_utf8 = st.encode('utf8')
enc_utf16 = st.encode('utf16')
print(enc_ascii)
print(enc_utf8)
print(enc_utf16)
# перевіримо скільки байт пішло на рядок
print(f'Кількість використаних байт в рядку  для таблиці ascii {len(enc_ascii)}')
print(f'Кількість використаних байт в рядку  для таблиці utf-8 {len(enc_utf8)}')
print(f'Кількість використаних байт в рядку  для таблиці utf-16 {len(enc_utf16)}')
# По факту таблиця UTF-16 використовує 2 байти на символ. Всі інші по одному!!!!!!!!

print()

# змінимо символ h на g за допомогою bytearray
print('змінимо символ h на g за допомогою bytearray')
ba = bytearray(b'ihor')
print(ba)
print('замінюємо символ "h" на "g"')
h = ord('h')
print(f'символ h = {h}')
g = ord('g')
print(f'символ g = {g}')
ba = bytearray(b'ihor')
ba[1] = 103
print(ba)
print(f'Використано {len(ba)} байта')

print()

# Реконверт байтів в рядок!!!! Важливий момент. Це завжди краще робити через DECODE(),
# тому що він вимагає вказати таблицю кодування!!!!!
print('Отак конвертувати можна!')
b_t_s = ba.decode('utf8')
print(b_t_s)
print(f'використано байтів {len(b_t_s)}\n')
# якщо просто будемо перетворювати байти в рядок отримаємо НЕПРАВИЛЬНИЙ результат
print('Так робити не можна, тому що отримаємо невірний результат')
bts = str(ba)
print(bts)
print(f'використано байтів {len(bts)}')
print()

# Писати байти в файл необхідно спеціальним чином. Обов'язково вказувати в режимі читання або створення b (w+b)
print("Обов'язково вказувати в режимі читання або створення b (w+b). "
      "Якщо цього не вказати, то прочитається рядок, А НЕ БАЙТИ!!! ")

# припустимо є якийсь малюнок
jpeg = [163, 6, 9, 13, 28, 35, 17, 34]
# створюємо файл для запису байтів
print('Створюємо файл записуємо в нього байти і читаємо його')
with open(r'C:\learning\es\files_hw\rec_jpeg.bin', 'w+b') as file:
    file.write(bytes(jpeg))
with open(r'C:\learning\es\files_hw\rec_jpeg.bin', 'rb') as file:
    dat = file.read()
    for i in dat:
        print(int(i))
print()


